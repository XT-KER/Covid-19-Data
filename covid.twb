<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.21.1217.2252                               -->
<workbook original-version='18.1' source-build='2021.4.2 (20214.21.1217.2252)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='country_vaccinations' inline='true' name='federated.01ah0690oe9xvc11dshc61lpns2f' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='country_vaccinations' name='semistructpassivestore-direct.0pz5wiy0u3jwyg12i769s03j04bh'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/User/Downloads/data - noSQL/data - noSQL' filename='country_vaccinations.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[country_vaccinations.json]'>
                  <map key='_id' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='semistructpassivestore-direct.0pz5wiy0u3jwyg12i769s03j04bh' name='country_vaccinations.json' table='[country_vaccinations.json]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='semistructpassivestore-direct.0pz5wiy0u3jwyg12i769s03j04bh' name='country_vaccinations.json' table='[country_vaccinations.json]' type='table' />
        <cols>
          <map key='[$oid]' value='[country_vaccinations.json].[_id.$oid]' />
          <map key='[Document Index (generated)]' value='[country_vaccinations.json].[Document Index (generated)]' />
          <map key='[country]' value='[country_vaccinations.json].[country]' />
          <map key='[daily_vaccinations]' value='[country_vaccinations.json].[daily_vaccinations]' />
          <map key='[daily_vaccinations_per_million]' value='[country_vaccinations.json].[daily_vaccinations_per_million]' />
          <map key='[daily_vaccinations_raw]' value='[country_vaccinations.json].[daily_vaccinations_raw]' />
          <map key='[date]' value='[country_vaccinations.json].[date]' />
          <map key='[iso_code]' value='[country_vaccinations.json].[iso_code]' />
          <map key='[people_fully_vaccinated]' value='[country_vaccinations.json].[people_fully_vaccinated]' />
          <map key='[people_fully_vaccinated_per_hundred]' value='[country_vaccinations.json].[people_fully_vaccinated_per_hundred]' />
          <map key='[people_vaccinated]' value='[country_vaccinations.json].[people_vaccinated]' />
          <map key='[people_vaccinated_per_hundred]' value='[country_vaccinations.json].[people_vaccinated_per_hundred]' />
          <map key='[source_name]' value='[country_vaccinations.json].[source_name]' />
          <map key='[source_website]' value='[country_vaccinations.json].[source_website]' />
          <map key='[total_vaccinations]' value='[country_vaccinations.json].[total_vaccinations]' />
          <map key='[total_vaccinations_per_hundred]' value='[country_vaccinations.json].[total_vaccinations_per_hundred]' />
          <map key='[vaccines]' value='[country_vaccinations.json].[vaccines]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[country_vaccinations.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_id.$oid</remote-name>
            <remote-type>130</remote-type>
            <local-name>[$oid]</local-name>
            <parent-name>[country_vaccinations.json]</parent-name>
            <remote-alias>_id.$oid</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[country_vaccinations.json]</parent-name>
            <remote-alias>country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations</remote-name>
            <remote-type>130</remote-type>
            <local-name>[daily_vaccinations]</local-name>
            <parent-name>[country_vaccinations.json]</parent-name>
            <remote-alias>daily_vaccinations</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations_per_million</remote-name>
            <remote-type>130</remote-type>
            <local-name>[daily_vaccinations_per_million]</local-name>
            <parent-name>[country_vaccinations.json]</parent-name>
            <remote-alias>daily_vaccinations_per_million</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations_raw</remote-name>
            <remote-type>130</remote-type>
            <local-name>[daily_vaccinations_raw]</local-name>
            <parent-name>[country_vaccinations.json]</parent-name>
            <remote-alias>daily_vaccinations_raw</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[country_vaccinations.json]</parent-name>
            <remote-alias>date</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[country_vaccinations.json]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>130</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[country_vaccinations.json]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>130</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[country_vaccinations.json]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>130</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[country_vaccinations.json]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>130</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[country_vaccinations.json]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[source_name]</local-name>
            <parent-name>[country_vaccinations.json]</parent-name>
            <remote-alias>source_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_website</remote-name>
            <remote-type>130</remote-type>
            <local-name>[source_website]</local-name>
            <parent-name>[country_vaccinations.json]</parent-name>
            <remote-alias>source_website</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>130</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[country_vaccinations.json]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>130</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[country_vaccinations.json]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vaccines</remote-name>
            <remote-type>130</remote-type>
            <local-name>[vaccines]</local-name>
            <parent-name>[country_vaccinations.json]</parent-name>
            <remote-alias>vaccines</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='$Oid' datatype='string' name='[$oid]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>_id.$oid</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='People fully vaccinated' datatype='integer' name='[Calculation_1638465844841807873]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='MAX([people_fully_vaccinated])' />
      </column>
      <column caption='Percentage of People Fully Vaccinated' datatype='real' name='[Calculation_1638465844842700802]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='MAX([total_vaccinations_per_hundred])' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='country_vaccinations.json' datatype='table' name='[__tableau_internal_object_id__].[country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>country</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Daily Vaccinations' datatype='integer' datatype-customized='true' name='[daily_vaccinations]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>daily_vaccinations</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Daily Vaccinations Per Million' datatype='string' name='[daily_vaccinations_per_million]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>daily_vaccinations_per_million</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Daily Vaccinations Raw' datatype='string' name='[daily_vaccinations_raw]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>daily_vaccinations_raw</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Date' datatype='date' datatype-customized='true' name='[date]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>date</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>iso_code</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='People Fully Vaccinated' datatype='integer' datatype-customized='true' name='[people_fully_vaccinated]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>people_fully_vaccinated</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='People Fully Vaccinated Per Hundred' datatype='string' name='[people_fully_vaccinated_per_hundred]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>people_fully_vaccinated_per_hundred</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='People Vaccinated' datatype='string' name='[people_vaccinated]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>people_vaccinated</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='People Vaccinated Per Hundred' datatype='string' name='[people_vaccinated_per_hundred]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>people_vaccinated_per_hundred</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Source Name' datatype='string' name='[source_name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>source_name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Source Website' datatype='string' name='[source_website]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>source_website</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Total Vaccinations' datatype='string' name='[total_vaccinations]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>total_vaccinations</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Total Vaccinations Per Hundred' datatype='real' datatype-customized='true' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>total_vaccinations_per_hundred</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Vaccines - Split 1 - Split 1' datatype='string' name='[vaccines - Split 1 - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.01ah0690oe9xvc11dshc61lpns2f].[vaccines - Split 1]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [vaccines - Split 1], &quot;;&quot;, 1 ) )' />
      </column>
      <column caption='Vaccines - Split 1 - Split 2' datatype='string' name='[vaccines - Split 1 - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.01ah0690oe9xvc11dshc61lpns2f].[vaccines - Split 1]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [vaccines - Split 1], &quot;;&quot;, 2 ) )' />
      </column>
      <column caption='Vaccines - Split 1' datatype='string' name='[vaccines - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.01ah0690oe9xvc11dshc61lpns2f].[vaccines]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [vaccines], &quot;/&quot;, 1 ) )' />
      </column>
      <column caption='Vaccines - Split 2' datatype='string' name='[vaccines - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.01ah0690oe9xvc11dshc61lpns2f].[vaccines]'>
        <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( [vaccines], &quot;/&quot;, 2 ), &quot;;&quot;, 1 ) )' />
      </column>
      <column caption='Vaccines' datatype='string' name='[vaccines]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>vaccines</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <_.fcp.SchemaViewerObjectModel.false...folder name='Country Vaccinations' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[country]' type='field' />
        <folder-item name='[daily_vaccinations_per_million]' type='field' />
        <folder-item name='[daily_vaccinations_raw]' type='field' />
        <folder-item name='[date]' type='field' />
        <folder-item name='[iso_code]' type='field' />
        <folder-item name='[people_fully_vaccinated_per_hundred]' type='field' />
        <folder-item name='[people_vaccinated]' type='field' />
        <folder-item name='[people_vaccinated_per_hundred]' type='field' />
        <folder-item name='[source_name]' type='field' />
        <folder-item name='[source_website]' type='field' />
        <folder-item name='[total_vaccinations]' type='field' />
        <folder-item name='[vaccines]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Country Vaccinations' role='measures'>
        <folder-item name='[daily_vaccinations]' type='field' />
        <folder-item name='[people_fully_vaccinated]' type='field' />
        <folder-item name='[total_vaccinations_per_hundred]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='_Id' role='dimensions'>
        <folder-item name='[$oid]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Country Vaccinations'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[country]' type='field' />
          <folder-item name='[daily_vaccinations]' type='field' />
          <folder-item name='[daily_vaccinations_per_million]' type='field' />
          <folder-item name='[daily_vaccinations_raw]' type='field' />
          <folder-item name='[date]' type='field' />
          <folder-item name='[iso_code]' type='field' />
          <folder-item name='[people_fully_vaccinated]' type='field' />
          <folder-item name='[people_fully_vaccinated_per_hundred]' type='field' />
          <folder-item name='[people_vaccinated]' type='field' />
          <folder-item name='[people_vaccinated_per_hundred]' type='field' />
          <folder-item name='[source_name]' type='field' />
          <folder-item name='[source_website]' type='field' />
          <folder-item name='[total_vaccinations]' type='field' />
          <folder-item name='[total_vaccinations_per_hundred]' type='field' />
          <folder-item name='[vaccines]' type='field' />
        </folder>
        <folder name='_Id'>
          <folder-item name='[$oid]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#26733d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#2c7e41'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#378848'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#44924e'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#509c51'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#5ea654'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#68b05d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#73ba67'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#7fc572'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8dcf7e'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#9dd88d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='country_vaccinations.json' id='country_vaccinations.json_FA324E34D67C422A8EB9BCA6BCD527D9'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.0pz5wiy0u3jwyg12i769s03j04bh' name='country_vaccinations.json' table='[country_vaccinations.json]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Daily Vaccination by Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='country_vaccinations' name='federated.01ah0690oe9xvc11dshc61lpns2f' />
          </datasources>
          <datasource-dependencies datasource='federated.01ah0690oe9xvc11dshc61lpns2f'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>country</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Daily Vaccinations' datatype='integer' datatype-customized='true' name='[daily_vaccinations]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>daily_vaccinations</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Date' datatype='date' datatype-customized='true' name='[date]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>date</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[date]' derivation='Month' name='[mn:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[daily_vaccinations]' derivation='Sum' name='[sum:daily_vaccinations:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01ah0690oe9xvc11dshc61lpns2f].[sum:daily_vaccinations:qk]</rows>
        <cols>[federated.01ah0690oe9xvc11dshc61lpns2f].[mn:date:qk]</cols>
      </table>
      <simple-id uuid='{7AAE62B2-109E-4906-ADA7-F5FAE502DAF8}' />
    </worksheet>
    <worksheet name='Monthly Vaccination Tracker'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Monthly Vaccination - Country:&lt;</run>
            <run>[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country_vaccinations' name='federated.01ah0690oe9xvc11dshc61lpns2f' />
          </datasources>
          <datasource-dependencies datasource='federated.01ah0690oe9xvc11dshc61lpns2f'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>country</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Daily Vaccinations' datatype='integer' datatype-customized='true' name='[daily_vaccinations]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>daily_vaccinations</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Date' datatype='date' datatype-customized='true' name='[date]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>date</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[daily_vaccinations]' derivation='Sum' name='[sum:daily_vaccinations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]'>
            <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.01ah0690oe9xvc11dshc61lpns2f].[tmn:date:ok]' value='147' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.01ah0690oe9xvc11dshc61lpns2f].[sum:daily_vaccinations:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' center='100000000' field='[federated.01ah0690oe9xvc11dshc61lpns2f].[sum:daily_vaccinations:qk]' num-steps='17' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01ah0690oe9xvc11dshc61lpns2f].[sum:daily_vaccinations:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]</rows>
        <cols>[federated.01ah0690oe9xvc11dshc61lpns2f].[tmn:date:ok]</cols>
      </table>
      <simple-id uuid='{BA8C3FF4-4D32-4183-94C3-78E157D67A5F}' />
    </worksheet>
    <worksheet name='Number of People Fully Vaccinated'>
      <table>
        <view>
          <datasources>
            <datasource caption='country_vaccinations' name='federated.01ah0690oe9xvc11dshc61lpns2f' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01ah0690oe9xvc11dshc61lpns2f'>
            <column caption='People fully vaccinated' datatype='integer' name='[Calculation_1638465844841807873]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='MAX([people_fully_vaccinated])' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>country</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated' datatype='integer' datatype-customized='true' name='[people_fully_vaccinated]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>people_fully_vaccinated</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1638465844841807873]' derivation='User' name='[usr:Calculation_1638465844841807873:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.01ah0690oe9xvc11dshc61lpns2f].[usr:Calculation_1638465844841807873:qk]' included-values='in-range' />
          <slices>
            <column>[federated.01ah0690oe9xvc11dshc61lpns2f].[usr:Calculation_1638465844841807873:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]' />
              <color column='[federated.01ah0690oe9xvc11dshc61lpns2f].[usr:Calculation_1638465844841807873:qk]' />
              <geometry column='[federated.01ah0690oe9xvc11dshc61lpns2f].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01ah0690oe9xvc11dshc61lpns2f].[Latitude (generated)]</rows>
        <cols>[federated.01ah0690oe9xvc11dshc61lpns2f].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E721DD3C-6A06-46C4-A438-6897D855BB8B}' />
    </worksheet>
    <worksheet name='Percentage of People Fully Vaccinated'>
      <table>
        <view>
          <datasources>
            <datasource caption='country_vaccinations' name='federated.01ah0690oe9xvc11dshc61lpns2f' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01ah0690oe9xvc11dshc61lpns2f'>
            <column caption='Percentage of People Fully Vaccinated' datatype='real' name='[Calculation_1638465844842700802]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='MAX([total_vaccinations_per_hundred])' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>country</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Total Vaccinations Per Hundred' datatype='real' datatype-customized='true' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>total_vaccinations_per_hundred</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1638465844842700802]' derivation='User' name='[usr:Calculation_1638465844842700802:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1638465844842700802]' derivation='User' name='[usr:Calculation_1638465844842700802:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.01ah0690oe9xvc11dshc61lpns2f].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.01ah0690oe9xvc11dshc61lpns2f].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]'>
            <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01ah0690oe9xvc11dshc61lpns2f].[usr:Calculation_1638465844842700802:ok]'>
            <groupfilter function='level-members' level='[usr:Calculation_1638465844842700802:ok]' />
          </filter>
          <filter class='quantitative' column='[federated.01ah0690oe9xvc11dshc61lpns2f].[usr:Calculation_1638465844842700802:qk]' included-values='in-range'>
            <min>0.059999999999999998</min>
            <max>231.78</max>
          </filter>
          <slices>
            <column>[federated.01ah0690oe9xvc11dshc61lpns2f].[usr:Calculation_1638465844842700802:ok]</column>
            <column>[federated.01ah0690oe9xvc11dshc61lpns2f].[usr:Calculation_1638465844842700802:qk]</column>
            <column>[federated.01ah0690oe9xvc11dshc61lpns2f].[Latitude (generated)]</column>
            <column>[federated.01ah0690oe9xvc11dshc61lpns2f].[Longitude (generated)]</column>
            <column>[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01ah0690oe9xvc11dshc61lpns2f].[Longitude (generated)]' field-type='quantitative' max='60372952.283807248' min='15808851.032125847' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.01ah0690oe9xvc11dshc61lpns2f].[Latitude (generated)]' field-type='quantitative' max='14844969.602235738' min='-10858126.635790141' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.01ah0690oe9xvc11dshc61lpns2f].[usr:Calculation_1638465844842700802:ok]' value='p0.00%' />
            <format attr='text-format' field='[federated.01ah0690oe9xvc11dshc61lpns2f].[usr:Calculation_1638465844842700802:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.01ah0690oe9xvc11dshc61lpns2f].[usr:Calculation_1638465844842700802:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]' />
              <color column='[federated.01ah0690oe9xvc11dshc61lpns2f].[usr:Calculation_1638465844842700802:qk]' />
              <geometry column='[federated.01ah0690oe9xvc11dshc61lpns2f].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01ah0690oe9xvc11dshc61lpns2f].[Latitude (generated)]</rows>
        <cols>[federated.01ah0690oe9xvc11dshc61lpns2f].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{386E5698-49ED-4E23-83BA-269F0850D2A2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='country_vaccinations' name='federated.01ah0690oe9xvc11dshc61lpns2f' />
      </datasources>
      <datasource-dependencies datasource='federated.01ah0690oe9xvc11dshc61lpns2f'>
        <column caption='People fully vaccinated' datatype='integer' name='[Calculation_1638465844841807873]' role='measure' type='ordinal'>
          <calculation class='tableau' formula='MAX([people_fully_vaccinated])' />
        </column>
        <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
          <desc>
            <formatted-text>
              <run>country</run>
            </formatted-text>
          </desc>
        </column>
        <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1638465844841807873]' derivation='User' name='[usr:Calculation_1638465844841807873:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='5' type-v2='layout-basic' w='89378' x='483' y='940'>
              <zone h='49060' id='3' name='Number of People Fully Vaccinated' w='89378' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='9' name='Monthly Vaccination Tracker' w='89378' x='483' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98120' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='940'>
              <zone h='8578' id='8' name='Number of People Fully Vaccinated' param='[federated.01ah0690oe9xvc11dshc61lpns2f].[usr:Calculation_1638465844841807873:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9656' x='89861' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7168' id='10' mode='checkdropdown' name='Monthly Vaccination Tracker' param='[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]' type-v2='filter' w='9656' x='89861' y='9518'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='12' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='11' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone h='8578' id='8' name='Number of People Fully Vaccinated' param='[federated.01ah0690oe9xvc11dshc61lpns2f].[usr:Calculation_1638465844841807873:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9656' x='89861' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='3' is-fixed='true' name='Number of People Fully Vaccinated' w='89378' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7168' id='10' mode='checkdropdown' name='Monthly Vaccination Tracker' param='[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]' type-v2='filter' w='9656' x='89861' y='9518'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='9' is-fixed='true' name='Monthly Vaccination Tracker' w='89378' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D3C9487A-9B3A-41AA-8750-6C1DF3DC879E}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Number of People Fully Vaccinated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.01ah0690oe9xvc11dshc61lpns2f].[usr:Calculation_1638465844841807873:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]</field>
            <field>[federated.01ah0690oe9xvc11dshc61lpns2f].[none:daily_vaccinations:nk]</field>
            <field>[federated.01ah0690oe9xvc11dshc61lpns2f].[none:daily_vaccinations_per_million:nk]</field>
            <field>[federated.01ah0690oe9xvc11dshc61lpns2f].[none:date:nk]</field>
            <field>[federated.01ah0690oe9xvc11dshc61lpns2f].[usr:Calculation_1638465844841807873:qk]</field>
            <field>[federated.090mq1e0hftebr1bw3mc30q0vrj9].[none:code (network.country):nk]</field>
            <field>[federated.090mq1e0hftebr1bw3mc30q0vrj9].[none:name (network.country):nk]</field>
            <field>[federated.090mq1e0hftebr1bw3mc30q0vrj9].[sum:runtime:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD94CC98-CC47-4647-A0BC-ABF599E1C669}' />
    </window>
    <window class='worksheet' name='Percentage of People Fully Vaccinated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]' size='412' type='filter' />
            <card param='[federated.01ah0690oe9xvc11dshc61lpns2f].[usr:Calculation_1638465844842700802:qk]' show-domain='false' show-null-ctrls='false' size='28' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]</field>
            <field>[federated.01ah0690oe9xvc11dshc61lpns2f].[usr:Calculation_1638465844842700802:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{62F4F3AD-F5D9-4F17-93E9-36D40FC76F35}' />
    </window>
    <window class='worksheet' name='Monthly Vaccination Tracker'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01ah0690oe9xvc11dshc61lpns2f].[mn:date:ok]</field>
            <field>[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]</field>
            <field>[federated.01ah0690oe9xvc11dshc61lpns2f].[none:date:nk]</field>
            <field>[federated.01ah0690oe9xvc11dshc61lpns2f].[none:iso_code:nk]</field>
            <field>[federated.01ah0690oe9xvc11dshc61lpns2f].[none:vaccines:nk]</field>
            <field>[federated.01ah0690oe9xvc11dshc61lpns2f].[sum:daily_vaccinations:qk]</field>
            <field>[federated.01ah0690oe9xvc11dshc61lpns2f].[tmn:date:ok]</field>
            <field>[federated.01ah0690oe9xvc11dshc61lpns2f].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE440BB1-1713-40D9-9974-93F1DC2501B8}' />
    </window>
    <window class='worksheet' name='Daily Vaccination by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01ah0690oe9xvc11dshc61lpns2f].[mn:date:ok]</field>
            <field>[federated.01ah0690oe9xvc11dshc61lpns2f].[none:country:nk]</field>
            <field>[federated.01ah0690oe9xvc11dshc61lpns2f].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{209318EF-6269-4CBF-BE4F-EC674B68F209}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Monthly Vaccination Tracker' />
        <viewpoint name='Number of People Fully Vaccinated'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{1D2671C0-DF25-409B-89E7-A3E152BD6B5A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Daily Vaccination by Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Monthly Vaccination Tracker' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Number of People Fully Vaccinated' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Percentage of People Fully Vaccinated' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
